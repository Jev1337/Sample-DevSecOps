controller:
  image:
    registry: "localhost:32000"
    repository: "jenkins-devsecops"
    tag: "latest"
    pullPolicy: "Always"
  # Disable plugin installation since our custom image already contains plugins
  installPlugins: false
  ingress:
    enabled: true
    hostName: jenkins.local
    ingressClassName: public
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
  servicePort: 8080
  jenkinsUrl: http://jenkins.local/
  # External access service configuration
  serviceType: ClusterIP
  nodePort: 30080
  podSecurityContext:
    fsGroup: 1000
    runAsUser: 1000
    runAsNonRoot: false
  securityContext:
    runAsUser: 1000
    runAsNonRoot: false
    allowPrivilegeEscalation: true
  dnsConfig:
    nameservers:
      - "8.8.8.8"
  sidecars:
    configAutoReload:
      enabled: false
  # Mount Docker socket for Docker builds
  extraVolumes:
    - name: docker-sock
      hostPath:
        path: /var/run/docker.sock
        type: Socket
  extraVolumeMounts:
    - name: docker-sock
      mountPath: /var/run/docker.sock
      readOnly: false
  # Initialize container to fix Docker socket permissions
  initContainers:
    - name: docker-socket-permission-fix
      image: busybox:1.35
      command: ['sh', '-c', 'chmod 666 /var/run/docker.sock || true']
      volumeMounts:
        - name: docker-sock
          mountPath: /var/run/docker.sock
      securityContext:
        runAsUser: 0
        privileged: true
persistence:
  storageClass: "microk8s-hostpath"
  size: "8Gi"
