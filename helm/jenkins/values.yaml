controller:
  image:
    registry: "localhost:32000"
    repository: "jenkins-devsecops"
    tag: "latest"
    pullPolicy: "Always"
  # Disable plugin installation since our custom image already contains plugins
  installPlugins: false
  # Enable authentication and create admin user
  admin:
    # -- Admin username created as a secret if `controller.admin.createSecret` is true
    username: "admin"
    # -- Admin password created as a secret if `controller.admin.createSecret` is true
    # @default -- <random password>
    password:

    # -- The key in the existing admin secret containing the username
    userKey: jenkins-admin-user
    # -- The key in the existing admin secret containing the password
    passwordKey: jenkins-admin-password

    # The default configuration uses this secret to configure an admin user
    # If you don't need that user or use a different security realm, then you can disable it
    # -- Create secret for admin user
    createSecret: true

    # -- The name of an existing secret containing the admin credentials
    existingSecret: ""
  # -- Email address for the administrator of the Jenkins instance
  jenkinsAdminEmail:
  # Jenkins URL and security configuration
  jenkinsUrlProtocol: "http"
  # Disable setup wizard since we're configuring everything
  jenkinsUriPrefix: "/"
  ingress:
    enabled: true
    hostName: jenkins.local
    ingressClassName: public
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
  servicePort: 8080
  jenkinsUrl: http://jenkins.local/
  # External access service configuration
  serviceType: ClusterIP
  nodePort: 30080
  # Run as root to allow k8s API access
  podSecurityContext:
    runAsUser: 0
    runAsNonRoot: false
  securityContext:
    runAsUser: 0
    runAsNonRoot: false
    allowPrivilegeEscalation: true
  dnsConfig:
    nameservers:
      - "8.8.8.8"
  sidecars:
    configAutoReload:
      enabled: false
  # Remove Docker-related volumes and mounts
persistence:
  storageClass: "microk8s-hostpath"
  size: "8Gi"

# Authentication and security configuration
serviceAccount:
  create: true
  annotations: {}

# Enable RBAC with cluster-admin permissions
rbac:
  create: true
  readSecrets: true

# Create ClusterRoleBinding for jenkins service account
clusterRoleBinding:
  create: true

# Agent configuration
agent:
  enabled: true
  defaultsProviderTemplate: ""
