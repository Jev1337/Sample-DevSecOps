---
# SonarQube and PostgreSQL Deployment Playbook

- name: "🔍 Deploy SonarQube code quality platform"
  hosts: devsecops
  become: yes
  gather_facts: yes

  tasks:
    - name: "🔍 Check if PostgreSQL is already deployed"
      command: microk8s kubectl get pods -n {{ sonarqube.namespace }} -l app.kubernetes.io/name=postgresql
      register: postgres_check
      failed_when: false
      changed_when: false
      become_user: "{{ ansible_user }}"

    - name: "🔍 Check if SonarQube is already deployed"
      command: microk8s kubectl get pods -n {{ sonarqube.namespace }} -l app=sonarqube
      register: sonarqube_check
      failed_when: false
      changed_when: false
      become_user: "{{ ansible_user }}"

    - name: "📊 Create PostgreSQL Helm values template"
      template:
        src: postgresql-values.yml.j2
        dest: "{{ remote_project_path }}/postgresql-values.yml"
        mode: '0644'

    - name: "🗃️ Deploy PostgreSQL via Helm"
      kubernetes.core.helm:
        name: "{{ postgresql.release_name }}"
        chart_ref: bitnami/postgresql
        namespace: "{{ sonarqube.namespace }}"
        values_files:
          - "{{ remote_project_path }}/postgresql-values.yml"
        wait: true
        wait_condition:
          type: Ready
          status: "True"
        wait_timeout: "{{ timeouts.helm_install }}"
        kubeconfig: "{{ kubeconfig_path }}"
      become_user: "{{ ansible_user }}"
      environment:
        PATH: "/snap/bin:{{ ansible_env.PATH }}"
      when: "'postgresql-0' not in postgres_check.stdout"

    - name: "⏳ Wait for PostgreSQL to be ready"
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: "{{ sonarqube.namespace }}"
        label_selectors:
          - "app.kubernetes.io/name=postgresql"
        wait: true
        wait_condition:
          type: Ready
          status: "True"
        wait_timeout: "{{ timeouts.pod_ready | int * 60 }}"
        kubeconfig: "{{ kubeconfig_path }}"
      become_user: "{{ ansible_user }}"

    - name: "📊 Create SonarQube Helm values template"
      template:
        src: sonarqube-values.yml.j2
        dest: "{{ remote_project_path }}/sonarqube-values.yml"
        mode: '0644'

    - name: "🔍 Deploy SonarQube via Helm"
      kubernetes.core.helm:
        name: "{{ sonarqube.release_name }}"
        chart_ref: sonarqube/sonarqube
        namespace: "{{ sonarqube.namespace }}"
        values_files:
          - "{{ remote_project_path }}/sonarqube-values.yml"
        wait: true
        wait_condition:
          type: Ready
          status: "True"
        wait_timeout: "{{ timeouts.helm_install }}"
        kubeconfig: "{{ kubeconfig_path }}"
      become_user: "{{ ansible_user }}"
      environment:
        PATH: "/snap/bin:{{ ansible_env.PATH }}"
      when: "'sonarqube-sonarqube-0' not in sonarqube_check.stdout"

    - name: "⏳ Wait for SonarQube to be ready"
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: "{{ sonarqube.namespace }}"
        label_selectors:
          - "app=sonarqube"
        wait: true
        wait_condition:
          type: Ready
          status: "True"
        wait_timeout: "{{ timeouts.pod_ready | int * 60 }}"
        kubeconfig: "{{ kubeconfig_path }}"
      become_user: "{{ ansible_user }}"

    - name: "🔍 Check SonarQube rollout status"
      command: microk8s kubectl rollout status statefulset/sonarqube-sonarqube -n {{ sonarqube.namespace }} --timeout={{ timeouts.rollout_status }}
      become_user: "{{ ansible_user }}"
      retries: 3
      delay: 30

    - name: "🔍 Copy SonarQube project configuration"
      copy:
        src: "{{ project_root }}/security/sonarqube/sonar-project.properties"
        dest: "{{ remote_project_path }}/sonar-project.properties"
        mode: '0644'

    - name: "📊 Display SonarQube deployment information"
      debug:
        msg:
          - "✅ SonarQube deployed successfully"
          - "🌐 Access URL: http://sonarqube.{{ domain_suffix }}"
          - "👤 Username: admin"
          - "🔑 Password: {{ sonarqube_admin_password }}"
          - "📋 Namespace: {{ sonarqube.namespace }}"
          - "🗃️ Database: PostgreSQL"

    - name: "📊 Display database connection information"
      debug:
        msg:
          - "🗃️ PostgreSQL connection details:"
          - "  Host: {{ sonarqube.postgresql.host }}"
          - "  Port: {{ sonarqube.postgresql.port }}"
          - "  Database: {{ sonarqube.postgresql.database }}"
          - "  Username: {{ sonarqube.postgresql.username }}"

    - name: "📝 Log SonarQube deployment completion"
      lineinfile:
        path: "{{ remote_logs_path }}/deployment.log"
        line: "{{ ansible_date_time.iso8601 }} - SonarQube deployment completed in namespace {{ sonarqube.namespace }}"
        create: yes

    - name: "📋 Display SonarQube configuration notes"
      debug:
        msg:
          - "🔧 SonarQube configuration:"
          - "  1. Access SonarQube web interface"
          - "  2. Change default admin password"
          - "  3. Create project with key: {{ sonar_project_key }}"
          - "  4. Generate authentication token for CI/CD"
          - "  5. Configure quality gates and profiles"
