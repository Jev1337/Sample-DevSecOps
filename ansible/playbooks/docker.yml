---
# Docker Installation and Configuration Playbook

- name: "🐳 Install and configure Docker"
  hosts: devsecops
  become: yes
  gather_facts: yes

  tasks:
    - name: "🔍 Check if Docker is already installed"
      command: docker --version
      register: docker_installed
      failed_when: false
      changed_when: false

    - name: "✅ Docker already installed"
      debug:
        msg: "Docker is already installed: {{ docker_installed.stdout }}"
      when: docker_installed.rc == 0

    - name: "🐳 Install Docker"
      block:
        - name: "🗑️ Remove old Docker versions"
          package:
            name:
              - docker
              - docker-engine
              - docker.io
              - containerd
              - runc
            state: absent
          when: ansible_os_family == "Debian"

        - name: "📦 Install Docker dependencies"
          apt:
            name:
              - apt-transport-https
              - ca-certificates
              - curl
              - gnupg
              - lsb-release
            state: present
          when: ansible_os_family == "Debian"

        - name: "🔐 Create Docker keyring directory"
          file:
            path: /etc/apt/keyrings
            state: directory
            mode: '0755'
          when: ansible_os_family == "Debian"

        - name: "🔑 Add Docker GPG key"
          shell: |
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            chmod a+r /etc/apt/keyrings/docker.gpg
          when: 
            - ansible_os_family == "Debian"
            - docker_installed.rc != 0

        - name: "📋 Add Docker repository"
          shell: |
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
          when: 
            - ansible_os_family == "Debian"
            - docker_installed.rc != 0

        - name: "📦 Update package cache after adding Docker repo"
          apt:
            update_cache: yes
          when: 
            - ansible_os_family == "Debian"
            - docker_installed.rc != 0

        - name: "🐳 Install Docker Engine"
          apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
            state: present
          when: 
            - ansible_os_family == "Debian"
            - docker_installed.rc != 0
          notify: restart docker

      when: docker_installed.rc != 0

    - name: "🔧 Configure Docker service"
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: "👥 Add users to docker group"
      user:
        name: "{{ item }}"
        groups: docker
        append: yes
      loop: "{{ docker_users }}"
      notify: restart docker

    - name: "🔍 Get current user groups"
      command: groups {{ ansible_user }}
      register: user_groups
      changed_when: false

    - name: "⚠️ Display group membership warning"
      debug:
        msg:
          - "⚠️ User {{ ansible_user }} has been added to the docker group"
          - "🔄 You may need to log out and log back in for changes to take effect"
          - "🔍 Current groups: {{ user_groups.stdout }}"
      when: "'docker' not in user_groups.stdout"

    - name: "🐳 Test Docker installation"
      command: docker run --rm hello-world
      register: docker_test
      become_user: "{{ ansible_user }}"
      retries: 3
      delay: 5
      until: docker_test.rc == 0

    - name: "✅ Display Docker version"
      command: docker --version
      register: docker_version
      changed_when: false

    - name: "✅ Display Docker Compose version"
      command: docker compose version
      register: docker_compose_version
      changed_when: false

    - name: "📊 Docker installation summary"
      debug:
        msg:
          - "🐳 {{ docker_version.stdout }}"
          - "🔧 {{ docker_compose_version.stdout }}"
          - "👥 Users in docker group: {{ docker_users | join(', ') }}"
          - "✅ Docker installation completed successfully"

    - name: "📝 Log Docker installation completion"
      lineinfile:
        path: "{{ remote_logs_path }}/deployment.log"
        line: "{{ ansible_date_time.iso8601 }} - Docker installation completed - {{ docker_version.stdout }}"
        create: yes

  handlers:
    - name: restart docker
      systemd:
        name: docker
        state: restarted
