---
- name: Cleanup DevSecOps Infrastructure
  hosts: localhost
  become: yes
  vars:
    external_ip: "{{ ansible_default_ipv4.address }}"
    
  tasks:
    - name: Confirm cleanup action
      pause:
        prompt: |
          ‚ö†Ô∏è  WARNING: This will remove all DevSecOps infrastructure!
          
          This will delete:
          - All Kubernetes deployments (Jenkins, SonarQube, Grafana, Loki, Alloy, Flask App)
          - All LoadBalancer services and Ingresses  
          - All namespaces and their data
          - Docker images (optional)
          - SIEM host monitoring tools (optional)
          
          Are you sure you want to continue? (yes/no)
      register: cleanup_confirm
      
    - name: Exit if not confirmed
      fail:
        msg: "Cleanup cancelled by user"
      when: cleanup_confirm.user_input | lower != 'yes'
      
    - name: Uninstall Helm releases
      shell: |
        microk8s helm3 uninstall {{ item.name }} -n {{ item.namespace }}
      loop:
        - name: jenkins
          namespace: jenkins
        - name: postgresql
          namespace: sonarqube
        - name: sonarqube
          namespace: sonarqube
        - name: loki
          namespace: monitoring
        - name: grafana
          namespace: monitoring
        - name: alloy
          namespace: monitoring
      ignore_errors: yes
      
    - name: Delete Flask application resources
      kubernetes.core.k8s:
        state: absent
        src: "{{ playbook_dir }}/../k8s/{{ item }}"
      loop:
        - deployment.yaml
        - service.yaml
        - ingress.yaml
        - hpa.yaml
      ignore_errors: yes
      
    - name: Delete SIEM webhook resources
      kubernetes.core.k8s:
        state: absent
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: alloy-webhook-service
            namespace: monitoring
      ignore_errors: yes
      
    - name: Delete webhook ingress
      kubernetes.core.k8s:
        state: absent
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: alloy-webhook-ingress
            namespace: monitoring
      ignore_errors: yes
      
    - name: Delete LoadBalancer services
      kubernetes.core.k8s:
        state: absent
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: "{{ item }}-loadbalancer"
            namespace: "{{ item }}"
      loop:
        - jenkins
        - sonarqube
        - grafana
        - flask-app
      ignore_errors: yes
      
    - name: Delete external ingresses
      kubernetes.core.k8s:
        state: absent
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: "{{ item }}-external"
            namespace: "{{ item }}"
      loop:
        - jenkins
        - sonarqube
        - grafana
        - app
      ignore_errors: yes
      
    - name: Delete namespaces
      kubernetes.core.k8s:
        name: "{{ item }}"
        api_version: v1
        kind: Namespace
        state: absent
      loop:
        - jenkins
        - sonarqube
        - monitoring
        - flask-app
      ignore_errors: yes
      
    - name: Remove Helm repositories
      shell: |
        microk8s helm3 repo remove {{ item }}
      loop:
        - jenkins
        - bitnami
        - sonarqube
        - grafana
      ignore_errors: yes
      
    - name: Ask about Docker image cleanup
      pause:
        prompt: "Do you want to remove Docker images? (yes/no)"
      register: docker_cleanup
      
    - name: Remove Docker images
      shell: |
        docker rmi flask-k8s-app:latest localhost:32000/flask-k8s-app:latest jenkins-devsecops:latest localhost:32000/jenkins-devsecops:latest
      when: docker_cleanup.user_input | lower == 'yes'
      ignore_errors: yes
      
    - name: Ask about SIEM host monitoring cleanup
      pause:
        prompt: "Do you want to remove SIEM host monitoring tools (fail2ban, auditd, etc.)? (yes/no)"
      register: siem_cleanup
      
    - name: Remove SIEM host monitoring
      block:
        - name: Stop and disable SIEM services
          systemd:
            name: "{{ item }}"
            state: stopped
            enabled: no
          loop:
            - fail2ban
            - auditd
          ignore_errors: yes
          
        - name: Remove SIEM packages
          package:
            name:
              - fail2ban
              - logwatch
              - chkrootkit
            state: absent
          ignore_errors: yes
          
        - name: Remove SIEM configuration files
          file:
            path: "{{ item }}"
            state: absent
          loop:
            - /opt/siem
            - /etc/logrotate.d/siem-security
            - /etc/fail2ban/jail.local
          ignore_errors: yes
          
        - name: Remove SIEM cron jobs
          cron:
            name: "SIEM Security Monitor"
            state: absent
          ignore_errors: yes
      when: siem_cleanup.user_input | lower == 'yes'
      
    - name: Ask about MicroK8s removal
      pause:
        prompt: "Do you want to remove MicroK8s completely? (yes/no)"
      register: k8s_cleanup
      
    - name: Remove MicroK8s
      snap:
        name: microk8s
        state: absent
      when: k8s_cleanup.user_input | lower == 'yes'
      ignore_errors: yes
      
    - name: Revert deployment image reference
      replace:
        path: "{{ playbook_dir }}/../k8s/deployment.yaml"
        regexp: 'image: localhost:32000/flask-k8s-app:latest'
        replace: 'image: flask-k8s-app:latest'
      ignore_errors: yes
      
    - name: Display cleanup summary
      debug:
        msg: |
          ‚úÖ DevSecOps Infrastructure Cleanup Completed!
          
          üìã What was removed:
          - All Helm deployments (Jenkins, SonarQube, Grafana, Loki, Alloy)
          - All Kubernetes resources and namespaces
          - LoadBalancer services and Ingresses
          - SIEM webhook infrastructure
          {% if docker_cleanup.user_input | lower == 'yes' %}
          - Docker images
          {% endif %}
          {% if siem_cleanup.user_input | lower == 'yes' %}
          - SIEM host monitoring tools
          {% endif %}
          {% if k8s_cleanup.user_input | lower == 'yes' %}
          - MicroK8s installation
          {% endif %}
          
          üîÑ To redeploy:
          ansible-playbook -i inventory playbooks/main.yml --ask-become-pass
          
          üõ°Ô∏è To setup SIEM monitoring:
          ansible-playbook -i inventory playbooks/siem.yml --ask-become-pass
