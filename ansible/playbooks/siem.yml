---
- name: Configure SIEM monitoring with enhanced logging
  hosts: localhost
  become: yes
  vars:
    external_ip: "{{ ansible_default_ipv4.address }}"
  
  tasks:
    - name: Create SIEM directory
      file:
        path: /opt/siem
        state: directory
        mode: '0755'

    - name: Copy SIEM Alloy configuration
      copy:
        src: "{{ playbook_dir }}/../../siem/alloy-siem-config.alloy"
        dest: /opt/siem/alloy-siem-config.alloy
        mode: '0644'

    - name: Configure host log directories to be accessible by Alloy
      file:
        path: /var/log
        mode: '0755'
        recurse: yes

    - name: Create log rotation configuration for security logs
      copy:
        dest: /etc/logrotate.d/siem-security
        content: |
          /var/log/auth.log
          /var/log/secure
          /var/log/syslog {
              daily
              missingok
              rotate 30
              compress
              delaycompress
              notifempty
              postrotate
                  /bin/kill -HUP `cat /var/run/rsyslogd.pid 2> /dev/null` 2> /dev/null || true
              endscript
          }

    - name: Ensure rsyslog is running for system logging
      systemd:
        name: rsyslog
        enabled: yes
        state: started

    - name: Check if SSH service exists
      command: systemctl list-unit-files --type=service
      register: service_list
      changed_when: false

    - name: Set SSH service name based on distribution
      set_fact:
        ssh_service_name: "{{ 'ssh' if 'ssh.service' in service_list.stdout else 'sshd' }}"

    - name: Display detected SSH service name
      debug:
        msg: "Detected SSH service name: {{ ssh_service_name }}"

    - name: Configure SSH logging for better SIEM integration
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?LogLevel'
        line: 'LogLevel VERBOSE'
        backup: yes
      notify: restart sshd
      when: ssh_service_name is defined

    - name: Configure audit logging
      lineinfile:
        path: /etc/audit/auditd.conf
        regexp: '^log_file'
        line: 'log_file = /var/log/audit/audit.log'
        backup: yes
      notify: restart auditd
      ignore_errors: yes

    - name: Enable and start auditd service
      systemd:
        name: auditd
        enabled: yes
        state: started
      ignore_errors: yes
      
    - name: Install additional security monitoring tools
      package:
        name:
          - fail2ban
          - logwatch
          - chkrootkit
        state: present
      
    - name: Configure fail2ban for SSH protection
      copy:
        dest: /etc/fail2ban/jail.local
        content: |
          [DEFAULT]
          bantime = 3600
          findtime = 600
          maxretry = 3
          
          [sshd]
          enabled = true
          port = ssh
          logpath = /var/log/auth.log
          maxretry = 3
          bantime = 3600
      notify: restart fail2ban
      
    - name: Enable and start fail2ban
      systemd:
        name: fail2ban
        enabled: yes
        state: started
        
    - name: Create SIEM monitoring script
      copy:
        dest: /opt/siem/monitor-security.sh
        mode: '0755'
        content: |
          #!/bin/bash
          # SIEM Security Monitoring Script
          
          LOG_FILE="/var/log/siem-monitor.log"
          
          echo "$(date): Starting SIEM security check" >> $LOG_FILE
          
          # Check for failed SSH logins
          FAILED_LOGINS=$(grep "Failed password" /var/log/auth.log | wc -l)
          if [ $FAILED_LOGINS -gt 10 ]; then
              echo "$(date): WARNING: High number of failed SSH logins: $FAILED_LOGINS" >> $LOG_FILE
          fi
          
          # Check for new users
          NEW_USERS=$(grep "new user" /var/log/auth.log | tail -10)
          if [ ! -z "$NEW_USERS" ]; then
              echo "$(date): INFO: New user activities detected" >> $LOG_FILE
          fi
          
          # Check disk space
          DISK_USAGE=$(df / | tail -1 | awk '{print $5}' | sed 's/%//')
          if [ $DISK_USAGE -gt 90 ]; then
              echo "$(date): CRITICAL: Disk space usage is at $DISK_USAGE%" >> $LOG_FILE
          fi
          
          echo "$(date): SIEM security check completed" >> $LOG_FILE
          
    - name: Create cron job for SIEM monitoring
      cron:
        name: "SIEM Security Monitor"
        minute: "*/5"
        job: "/opt/siem/monitor-security.sh"
        
    - name: Display SIEM setup information
      debug:
        msg: |
          SIEM setup completed!
          
          Webhook URL: http://webhook.{{ external_ip }}.nip.io/webhook
          
          Configure your Git repositories to send webhooks to this URL for commit monitoring.
          
          Security logs are being collected from:
          - /var/log/auth.log (SSH authentication)
          - /var/log/secure (Security events)
          - /var/log/syslog (System logs)
          - /var/log/audit/audit.log (Audit logs)
          
          Monitoring includes:
          - SSH login attempts (successful/failed)
          - Git webhook events
          - System security events
          - Container logs from Kubernetes
          
          Access the SIEM dashboard in Grafana to view security events.

  handlers:
    - name: restart sshd
      systemd:
        name: "{{ ssh_service_name | default('ssh') }}"
        state: restarted

    - name: restart auditd
      systemd:
        name: auditd
        state: restarted

    - name: restart fail2ban
      systemd:
        name: fail2ban
        state: restarted
