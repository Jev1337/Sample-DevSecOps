---
# Auditd Installation and Configuration
- name: Install auditd package
  package:
    name: auditd
    state: present
  become: yes

- name: Install audispd-plugins for log forwarding
  package:
    name: audispd-plugins
    state: present
  become: yes
  ignore_errors: yes

- name: Create auditd rules directory
  file:
    path: /etc/audit/rules.d
    state: directory
    mode: '0750'
    owner: root
    group: root
  become: yes

- name: Configure auditd main configuration
  blockinfile:
    path: /etc/audit/auditd.conf
    block: |
      # SIEM Audit Configuration
      log_file = /var/log/audit/audit.log
      log_format = RAW
      log_group = adm
      priority_boost = 4
      flush = INCREMENTAL_ASYNC
      freq = 50
      max_log_file = 50
      num_logs = 10
      disp_qos = lossy
      dispatcher = /sbin/audispd
      name_format = HOSTNAME
      max_log_file_action = ROTATE
      space_left = 75
      space_left_action = SYSLOG
      admin_space_left = 50
      admin_space_left_action = SUSPEND
      disk_full_action = SUSPEND
      disk_error_action = SUSPEND
    marker: "# {mark} ANSIBLE MANAGED BLOCK - AUDITD CONFIG"
    create: yes
    backup: yes
  become: yes
  notify: restart auditd

- name: Configure audit rules for file access monitoring
  copy:
    dest: /etc/audit/rules.d/10-file-access.rules
    content: |
      # File Access Monitoring Rules
      # Monitor access to sensitive system files
      -w /etc/passwd -p wa -k user_modification
      -w /etc/group -p wa -k user_modification
      -w /etc/shadow -p wa -k user_modification
      -w /etc/gshadow -p wa -k user_modification
      -w /etc/sudoers -p wa -k privilege_escalation
      -w /etc/sudoers.d/ -p wa -k privilege_escalation
      
      # Monitor SSH configuration
      -w /etc/ssh/sshd_config -p wa -k ssh_config
      -w /root/.ssh -p wa -k ssh_keys
      
      # Monitor system configuration files
      -w /etc/hosts -p wa -k network_config
      -w /etc/hostname -p wa -k network_config
      -w /etc/resolv.conf -p wa -k network_config
      
      # Monitor cron jobs
      -w /etc/cron.allow -p wa -k cron_config
      -w /etc/cron.deny -p wa -k cron_config
      -w /etc/cron.d/ -p wa -k cron_config
      -w /etc/cron.daily/ -p wa -k cron_config
      -w /etc/cron.hourly/ -p wa -k cron_config
      -w /etc/cron.monthly/ -p wa -k cron_config
      -w /etc/cron.weekly/ -p wa -k cron_config
      -w /etc/crontab -p wa -k cron_config
      -w /var/spool/cron/crontabs/ -p wa -k cron_config
      
      # Monitor log files
      -w /var/log/auth.log -p wa -k log_tampering
      -w /var/log/syslog -p wa -k log_tampering
    mode: '0640'
    owner: root
    group: root
  become: yes
  notify: restart auditd

- name: Configure audit rules for user actions monitoring
  copy:
    dest: /etc/audit/rules.d/20-user-actions.rules
    content: |
      # User Actions Monitoring Rules
      # Monitor user authentication events
      -w /var/log/faillog -p wa -k authentication
      -w /var/log/lastlog -p wa -k authentication
      -w /var/log/tallylog -p wa -k authentication
      
      # Monitor sudo usage
      -a always,exit -F arch=b64 -S execve -F euid=0 -F auid>=1000 -F auid!=4294967295 -k privilege_escalation
      -a always,exit -F arch=b32 -S execve -F euid=0 -F auid>=1000 -F auid!=4294967295 -k privilege_escalation
      
      # Monitor user account modifications
      -w /usr/bin/passwd -p x -k user_modification
      -w /usr/sbin/groupadd -p x -k user_modification
      -w /usr/sbin/groupmod -p x -k user_modification
      -w /usr/sbin/addgroup -p x -k user_modification
      -w /usr/sbin/useradd -p x -k user_modification
      -w /usr/sbin/usermod -p x -k user_modification
      -w /usr/sbin/adduser -p x -k user_modification
      
      # Monitor login/logout events
      -w /var/run/utmp -p wa -k session
      -w /var/log/wtmp -p wa -k session
      -w /var/log/btmp -p wa -k session
      
      # Monitor process execution
      -a always,exit -F arch=b64 -S execve -k process_execution
      -a always,exit -F arch=b32 -S execve -k process_execution
    mode: '0640'
    owner: root
    group: root
  become: yes
  notify: restart auditd

- name: Configure audit rules for basic SIEM events
  copy:
    dest: /etc/audit/rules.d/30-siem-events.rules
    content: |
      # Basic SIEM Events Monitoring Rules
      # Monitor network connections
      -a always,exit -F arch=b64 -S socket -F a0=2 -k network_connect
      -a always,exit -F arch=b32 -S socket -F a0=2 -k network_connect
      -a always,exit -F arch=b64 -S connect -k network_connect
      -a always,exit -F arch=b32 -S connect -k network_connect
      
      # Monitor file system mounts
      -a always,exit -F arch=b64 -S mount -k filesystem_mount
      -a always,exit -F arch=b32 -S mount -k filesystem_mount
      
      # Monitor system calls for security events
      -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time_change
      -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time_change
      -a always,exit -F arch=b64 -S clock_settime -k time_change
      -a always,exit -F arch=b32 -S clock_settime -k time_change
      -w /etc/localtime -p wa -k time_change
      
      # Monitor kernel module loading
      -w /sbin/insmod -p x -k kernel_modules
      -w /sbin/rmmod -p x -k kernel_modules
      -w /sbin/modprobe -p x -k kernel_modules
      -a always,exit -F arch=b64 -S init_module -S delete_module -k kernel_modules
      -a always,exit -F arch=b32 -S init_module -S delete_module -k kernel_modules
      
      # Monitor system startup scripts
      -w /etc/init.d/ -p wa -k init_scripts
      -w /etc/init/ -p wa -k init_scripts
      -w /etc/systemd/ -p wa -k systemd_config
      
      # Monitor package management
      -w /usr/bin/dpkg -p x -k package_management
      -w /usr/bin/apt -p x -k package_management
      -w /usr/bin/apt-get -p x -k package_management
      -w /usr/bin/aptitude -p x -k package_management
      -w /usr/bin/snap -p x -k package_management
      
      # Make the configuration immutable
      -e 2
    mode: '0640'
    owner: root
    group: root
  become: yes
  notify: restart auditd

- name: Enable and start auditd service
  systemd:
    name: auditd
    enabled: yes
    state: started
    daemon_reload: yes
  become: yes

- name: Configure audit log rotation
  copy:
    dest: /etc/logrotate.d/audit
    content: |
      /var/log/audit/audit.log {
          daily
          rotate 30
          compress
          delaycompress
          missingok
          notifempty
          create 0640 root adm
          postrotate
              /sbin/service auditd restart > /dev/null 2>&1 || true
          endrotate
      }
    mode: '0644'
    owner: root
    group: root
  become: yes

- name: Set proper permissions for audit logs
  file:
    path: /var/log/audit
    state: directory
    mode: '0750'
    owner: root
    group: adm
    recurse: yes
  become: yes

- name: Verify auditd is running and collecting events
  shell: |
    auditctl -s
    ausearch -k user_modification --start recent | head -5 || echo "No recent user modification events"
  register: audit_status
  become: yes
  ignore_errors: yes

- name: Display audit status
  debug:
    var: audit_status.stdout_lines
  when: audit_status.stdout_lines is defined

# Kubernetes Audit Configuration
- name: Create SIEM configuration directory
  file:
    path: /etc/kubernetes/siem
    state: directory
    mode: '0755'

- name: Copy Kubernetes audit policy
  copy:
    src: "{{ inventory_dir }}/../siem/configs/audit-policy.yaml"
    dest: /etc/kubernetes/siem/audit-policy.yaml
    mode: '0644'

- name: Enable MicroK8s audit logging
  shell: |
    microk8s kubectl patch -n kube-system daemonset.apps/calico-node --type='merge' -p='{"spec":{"template":{"spec":{"tolerations":[{"operator":"Exists"}]}}}}'
  register: audit_config
  changed_when: false
  ignore_errors: yes

- name: Create audit log directory
  file:
    path: /var/log/kubernetes
    state: directory
    mode: '0755'

- name: Configure MicroK8s API server for audit logging
  blockinfile:
    path: /var/snap/microk8s/current/args/kube-apiserver
    block: |
      --audit-log-path=/var/log/kubernetes/audit.log
      --audit-policy-file=/etc/kubernetes/siem/audit-policy.yaml
      --audit-log-maxage=30
      --audit-log-maxbackup=10
      --audit-log-maxsize=100
    marker: "# {mark} ANSIBLE MANAGED BLOCK - AUDIT LOGGING"
    create: yes
  register: apiserver_config

- name: Restart MicroK8s to apply audit configuration
  shell: |
    microk8s stop
    sleep 10
    microk8s start
    microk8s status --wait-ready
  when: apiserver_config.changed

- name: Verify audit logging is working
  wait_for:
    path: /var/log/kubernetes/audit.log
    timeout: 60
  ignore_errors: yes

- name: Set proper permissions for audit log
  file:
    path: /var/log/kubernetes/audit.log
    mode: '0644'
  ignore_errors: yes
