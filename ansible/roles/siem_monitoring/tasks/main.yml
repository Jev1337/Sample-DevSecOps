---
- name: Ensure Grafana Helm repository is added
  shell: |
    microk8s helm3 repo add grafana https://grafana.github.io/helm-charts || true
    microk8s helm3 repo update
  ignore_errors: yes

- name: Wait for Grafana service to be ready
  shell: |
    microk8s kubectl wait --for=condition=Ready pod -l app.kubernetes.io/name=grafana -n monitoring --timeout=300s
  ignore_errors: yes

- name: Get Grafana service port
  shell: |
    microk8s kubectl get svc grafana -n monitoring -o jsonpath='{.spec.ports[0].nodePort}'
  register: grafana_nodeport
  ignore_errors: yes

- name: Create Grafana dashboard directory
  file:
    path: /tmp/grafana-dashboards
    state: directory

- name: Copy Main SIEM dashboard
  copy:
    src: "{{ inventory_dir }}/../monitoring/grafana/dashboards/siem-real-security.json"
    dest: /tmp/grafana-dashboards/siem-real-security.json
  
- name: Copy Flask Security dashboard
  copy:
    src: "{{ inventory_dir }}/../monitoring/grafana/dashboards/security.json"
    dest: /tmp/grafana-dashboards/security.json

- name: Copy Flask General Logs dashboard
  copy:
    src: "{{ inventory_dir }}/../monitoring/grafana/dashboards/app-logs.json"
    dest: /tmp/grafana-dashboards/app-logs.json

- name: Configure SIEM dashboard via kubectl ConfigMap
  shell: |
    microk8s kubectl create configmap siem-dashboard-config \
      --from-file=/tmp/grafana-dashboards/siem-real-security.json \
      -n monitoring --dry-run=client -o yaml | \
    microk8s kubectl label --local -f - grafana_dashboard=1 -o yaml | \
    microk8s kubectl apply -f -
  ignore_errors: yes

- name: Update Alloy configuration for SIEM log collection
  shell: |
    microk8s helm3 upgrade alloy grafana/alloy -n monitoring -f {{ inventory_dir }}/../helm/alloy/values.yaml
  register: alloy_upgrade
  ignore_errors: yes

- name: Restart Alloy to apply new configuration
  shell: |
    microk8s kubectl rollout restart daemonset/alloy -n monitoring
    microk8s kubectl rollout status daemonset/alloy -n monitoring --timeout=120s
  when: alloy_upgrade.changed

- name: Verify SIEM log collection
  shell: |
    # Test if logs are being collected
    microk8s kubectl logs -n monitoring -l app.kubernetes.io/name=alloy --tail=50
  register: alloy_logs
  ignore_errors: yes

- name: Create enhanced SIEM dashboard with severity indicators
  copy:
    dest: /tmp/grafana-dashboards/siem-enhanced-security.json
    content: |
      {
        "dashboard": {
          "id": null,
          "title": "SIEM - Enhanced Security Monitoring",
          "tags": ["siem", "security", "monitoring"],
          "timezone": "browser",
          "panels": [
            {
              "id": 1,
              "title": "Security Events by Severity",
              "type": "stat",
              "targets": [
                {
                  "expr": "sum by (severity) (count_over_time({security_level=~\"critical|high|medium|low\"}[5m]))",
                  "refId": "A"
                }
              ],
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "thresholds": {
                    "steps": [
                      {"color": "green", "value": null},
                      {"color": "yellow", "value": 10},
                      {"color": "orange", "value": 50},
                      {"color": "red", "value": 100}
                    ]
                  }
                }
              },
              "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
            },
            {
              "id": 2,
              "title": "Critical Security Events",
              "type": "logs",
              "targets": [
                {
                  "expr": "{security_level=\"critical\"}",
                  "refId": "A"
                }
              ],
              "options": {
                "showTime": true,
                "showLabels": true,
                "sortOrder": "Descending"
              },
              "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
            },
            {
              "id": 3,
              "title": "Fail2ban Activity",
              "type": "logs",
              "targets": [
                {
                  "expr": "{job=\"fail2ban\"}",
                  "refId": "A"
                }
              ],
              "gridPos": {"h": 8, "w": 24, "x": 0, "y": 8}
            },
            {
              "id": 4,
              "title": "Authentication Failures by IP",
              "type": "table",
              "targets": [
                {
                  "expr": "topk(10, sum by (source_ip) (count_over_time({event_type=\"auth_failure\"}[1h])))",
                  "refId": "A"
                }
              ],
              "gridPos": {"h": 8, "w": 12, "x": 0, "y": 16}
            },
            {
              "id": 5,
              "title": "Security Event Timeline",
              "type": "logs",
              "targets": [
                {
                  "expr": "{security_level=~\"high|critical\"} |= \"\"",
                  "refId": "A"
                }
              ],
              "gridPos": {"h": 8, "w": 12, "x": 12, "y": 16}
            }
          ],
          "time": {
            "from": "now-1h",
            "to": "now"
          },
          "refresh": "30s"
        }
      }

- name: Configure enhanced SIEM dashboard via kubectl ConfigMap
  shell: |
    microk8s kubectl create configmap siem-enhanced-dashboard-config \
      --from-file=/tmp/grafana-dashboards/siem-enhanced-security.json \
      -n monitoring --dry-run=client -o yaml | \
    microk8s kubectl label --local -f - grafana_dashboard=1 -o yaml | \
    microk8s kubectl apply -f -
  ignore_errors: yes

- name: Create Grafana alerting rules for security events
  copy:
    dest: /tmp/grafana-alerts/security-alerts.yaml
    content: |
      groups:
        - name: security_alerts
          rules:
            - alert: CriticalSecurityEvent
              expr: increase(loki_lines_total{level="error"}[5m]) > 0
              for: 0m
              labels:
                severity: critical
              annotations:
                summary: "Critical security event detected"
                description: "A critical security event has been detected in the system logs"
            
            - alert: HighSecurityEvents
              expr: increase(loki_lines_total{security_level="high"}[5m]) > 5
              for: 2m
              labels:
                severity: warning
              annotations:
                summary: "High number of security events"
                description: "More than 5 high-severity security events in the last 5 minutes"
            
            - alert: Fail2banBanActivity
              expr: increase(loki_lines_total{event_type="ip_banned"}[10m]) > 0
              for: 0m
              labels:
                severity: warning
              annotations:
                summary: "IP address banned by fail2ban"
                description: "An IP address has been banned by fail2ban due to suspicious activity"
            
            - alert: MultipleAuthFailures
              expr: increase(loki_lines_total{event_type="auth_failure"}[5m]) > 10
              for: 1m
              labels:
                severity: warning
              annotations:
                summary: "Multiple authentication failures"
                description: "More than 10 authentication failures in the last 5 minutes"

- name: Display enhanced SIEM setup status
  debug:
    msg: |
      Enhanced SIEM monitoring configuration applied successfully!
      - Fail2ban installed and configured for intrusion prevention
      - Enhanced logging with severity levels (CRITICAL, HIGH, MEDIUM, LOW)
      - Real-time security monitoring with automated threat detection
      - Alloy updated to collect security logs with severity indicators
      - Enhanced SIEM dashboard with severity-based visualizations
      - Log collection includes: SSH logs, fail2ban events, audit logs, webhook events
      - Security event categorization and alerting configured
      
      Security Features Added:
      - SSH brute force protection via fail2ban
      - Kubernetes API abuse detection
      - Webhook abuse monitoring
      - Real-time security event monitoring
      - Automated IP banning for suspicious activities
      - Enhanced log rotation and management
