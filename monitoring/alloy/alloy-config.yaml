apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    name: monitoring

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy-config
  namespace: monitoring
data:
  config.alloy: |
    logging {
      level  = "info"
      format = "logfmt"
    }

    discovery.kubernetes "pods" {
      role = "pod"
      namespaces {
        names = ["flask-app", "monitoring"]
      }
    }

    discovery.relabel "flask_app_logs" {
      targets = discovery.kubernetes.pods.targets
      
      rule {
        source_labels = ["__meta_kubernetes_pod_label_app"]
        target_label  = "app"
      }
      
      rule {
        source_labels = ["__meta_kubernetes_pod_name"]
        target_label  = "pod"
      }
      
      rule {
        source_labels = ["__meta_kubernetes_namespace"]
        target_label  = "namespace"
      }
      
      rule {
        source_labels = ["__meta_kubernetes_pod_container_name"]
        target_label  = "container"
      }
      
      rule {
        source_labels = ["__meta_kubernetes_pod_node_name"]
        target_label  = "node"
      }
      
      rule {
        source_labels = ["__meta_kubernetes_pod_label_version"]
        target_label  = "version"
      }
    }

    loki.source.kubernetes "pods" {
      targets    = discovery.relabel.flask_app_logs.output
      forward_to = [loki.process.parse_json.receiver]
    }

    loki.process "parse_json" {
      forward_to = [loki.write.default.receiver]
      
      stage.json {
        expressions = {
          timestamp    = "timestamp",
          level       = "level", 
          message     = "message",
          request_id  = "request_id",
          service     = "service",
          method      = "method",
          path        = "path",
          status_code = "status_code",
          user_agent  = "user_agent",
        }
      }
      
      stage.labels {
        values = {
          level       = "level",
          service     = "service", 
          method      = "method",
          status_code = "status_code",
        }
      }
      
      stage.timestamp {
        source = "timestamp"
        format = "RFC3339"
      }
    }

    loki.write "default" {
      endpoint {
        url = "http://loki:3100/loki/api/v1/push"
      }
    }

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: alloy
  namespace: monitoring
  labels:
    app: alloy
spec:
  selector:
    matchLabels:
      app: alloy
  template:
    metadata:
      labels:
        app: alloy
    spec:
      serviceAccountName: alloy
      containers:
      - name: alloy
        image: grafana/alloy:v1.0.0
        args:
        - run
        - /etc/alloy/config.alloy
        - --server.http.listen-addr=0.0.0.0:12345
        - --cluster.enabled=false
        - --disable-reporting=true
        ports:
        - containerPort: 12345
          name: http
        volumeMounts:
        - name: config
          mountPath: /etc/alloy
          readOnly: true
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
        securityContext:
          privileged: true
          runAsUser: 0
      volumes:
      - name: config
        configMap:
          name: alloy-config
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      tolerations:
      - effect: NoSchedule
        operator: Exists

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alloy
  namespace: monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: alloy
rules:
- apiGroups: [""]
  resources: ["pods", "nodes", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: alloy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: alloy
subjects:
- kind: ServiceAccount
  name: alloy
  namespace: monitoring
